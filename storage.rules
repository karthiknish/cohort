rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function hasValidDownloadToken() {
      return request.query.token != null
        && resource != null
        && resource.metadata != null
        && resource.metadata.firebaseStorageDownloadTokens != null
        && resource.metadata.firebaseStorageDownloadTokens == request.query.token;
    }

    match /public/{allPaths=**} {
      allow read;
      allow write: if false;
    }

    match /users/{userId}/{allPaths=**} {
      allow read, write: if isOwner(userId);
    }

    match /proposals/{userId}/{allPaths=**} {
      allow read: if isOwner(userId) || hasValidDownloadToken();
      allow write: if isOwner(userId);
    }

    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
